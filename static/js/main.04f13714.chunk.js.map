{"version":3,"sources":["api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","specify","a","fetch","json","result","getUserPosts","userId","Number","PostsList","selectPost","post","useState","currentPostList","setPostList","useEffect","finder","className","map","singlePost","title","type","onClick","id","undefined","getPostComments","postId","postComment","name","email","body","method","headers","JSON","stringify","NewCommentForm","currentPostId","needToUpdate","setNeedToUpdate","setName","setEmail","memo","setMemo","onSubmit","event","preventDefault","placeholder","required","value","onChange","target","PostDetails","commentsList","setCommentsList","isCommentsVisible","setVisibilityOfComments","length","singleComment","App","currentUser","setCurrentUser","selectedPost","setSelectedPost","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04f13714.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate.academy/students-api';\n// export const users = '/users';\n// export const posts = '/posts';\n\nexport async function request(specify : string) {\n  const result = await (await fetch(`${BASE_URL}/${specify}`)).json();\n\n  return result;\n}\n\nexport function deleteRequest(specify : string) {\n  const result = fetch(`${BASE_URL}/${specify}`, { method: 'DELETE' });\n\n  return result;\n}\n","import { BASE_URL, request } from './api';\n\nexport async function getUserPosts(userId : string) {\n  let result;\n\n  if (Number(userId) === 0) {\n    result = await (await request('posts'));\n  } else {\n    result = await (await fetch(`${BASE_URL}/posts?userId=${userId}`)).json();\n  }\n\n  return result;\n}\n","/* eslint-disable react/require-default-props */\nimport React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/posts';\nimport { Post } from '../../react-app-env';\nimport './PostsList.scss';\n\ninterface Props {\n  userId: string;\n  selectPost: (arg0?: Post) => void;\n  post?: Post;\n}\n\nexport const PostsList: React.FC<Props> = ({ userId, selectPost, post }) => {\n  const [currentPostList, setPostList] = useState<Post[]>([]);\n\n  async function finder() {\n    const result = await getUserPosts(userId);\n\n    setPostList(result);\n  }\n\n  useEffect(() => {\n    finder();\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {\n          currentPostList.map(singlePost => (\n            <li className=\"PostList__item\">\n              <div>\n                <b>{`[User] #${singlePost.userId} `}</b>\n                {singlePost.title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  if ((post) && (post.id === singlePost.id)) {\n                    selectPost(undefined);\n                  } else {\n                    selectPost(singlePost);\n                  }\n                }}\n              >\n                {post && (post.id === singlePost.id)\n                  ? 'close'\n                  : 'open'}\n              </button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import { BASE_URL, request } from './api';\n\nexport async function getPostComments(postId : number) {\n  const result = await request(`comments?postId=${postId}`);\n\n  return result;\n}\n\nexport async function postComment(\n  name : string, email : string, body : string, postId: number,\n) {\n  await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n}\n","import React, { useState } from 'react';\nimport { postComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ninterface Props {\n  currentPostId : number;\n  needToUpdate: boolean,\n  setNeedToUpdate: (arg0 : boolean) => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = (\n  { currentPostId, needToUpdate, setNeedToUpdate },\n) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [memo, setMemo] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={async (event) => {\n        event.preventDefault();\n        await postComment(name, email, memo, currentPostId);\n        setNeedToUpdate(!needToUpdate);\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={(event) => {\n            setEmail(event.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={memo}\n          onChange={(event) => {\n            setMemo(event.target.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","/* eslint-disable react/require-default-props */\nimport React, { useEffect, useState } from 'react';\nimport { deleteRequest } from '../../api/api';\nimport { getPostComments } from '../../api/comments';\nimport { Post, Comment } from '../../react-app-env';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ninterface Props {\n  post: Post;\n}\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [commentsList, setCommentsList] = useState<Comment[]>([]);\n  const [isCommentsVisible, setVisibilityOfComments] = useState(true);\n  const [needToUpdate, setNeedToUpdate] = useState(false);\n\n  async function finder() {\n    const result = await getPostComments(post.id);\n\n    setCommentsList(result);\n  }\n\n  useEffect(() => {\n    finder();\n    setVisibilityOfComments(true);\n  }, [post, needToUpdate]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {post\n    && (\n      <>\n        <section className=\"PostDetails__post\">\n          <p>{post.title}</p>\n        </section>\n        <section className=\"PostDetails__comments\">\n          {commentsList.length > 0\n          && (\n            <button\n              type=\"button\"\n              onClick={() => {\n                setVisibilityOfComments(!isCommentsVisible);\n              }}\n            >\n              {(isCommentsVisible)\n                ? 'Hide comments'\n                : 'Show comments'}\n            </button>\n          )}\n          <ul className=\"PostDetails__list\">\n            { post\n            && (isCommentsVisible)\n            && (commentsList.map(singleComment => (\n              <li key={singleComment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={async () => {\n                    await deleteRequest(`comments/${singleComment.id}`);\n                    setNeedToUpdate(!needToUpdate);\n                  }}\n                >\n                  X\n                </button>\n                <p>{post.body}</p>\n              </li>\n            )))}\n          </ul>\n        </section>\n        <section>\n          <div className=\"PostDetails__form-wrapper\">\n            <NewCommentForm\n              currentPostId={post.id}\n              needToUpdate={needToUpdate}\n              setNeedToUpdate={setNeedToUpdate}\n            />\n          </div>\n        </section>\n      </>\n    )}\n    </div>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Post } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState('0');\n  const [selectedPost, setSelectedPost] = useState<Post>();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(event) => {\n              setCurrentUser(event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={currentUser}\n            selectPost={setSelectedPost}\n            post={selectedPost}\n          />\n        </div>\n\n        {selectedPost && (\n          <div className=\"App__content\">\n            <PostDetails post={selectedPost} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}